```{r}
#Imports
library(malecns)
library(coconatfly)
library(fafbseg)
library(neuprintr)
library(ggplot2)
library(dplyr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)
library(stringr)
library(igraph)
library(tidygraph)
library(ggraph)
library(jsonlite)
library(ggplot2)
library(reshape2)
library(Matrix)
library(ggplot2)
library(ggpubr)

#conna = neuprint_login(dataset='male-cns:v0.9',server='https://neuprint-cns.janelia.org/')
#mcns.rois = neuprint_ROIs(dataset = 'male-cns:v0.9')
#neuprint_get_synapses(13693,roi='VNC')
```

```{r setup, include=FALSE}
# Setup knitr global options for clean rendering and consistent figures
knitr::opts_chunk$set(
  echo = TRUE,
  message = FALSE,
  warning = FALSE,
  fig.align = 'center',
  fig.width = 8,
  fig.height = 6
)
```


## 1 Load data

### 1.1 Load male boday annotations
```{r}
synapse_threshold=5
mba<-mcns_body_annotations()
mba.static<-mcns_body_annotations()
mba<-mba%>%mutate(type=ifelse(type=='',NA,type))
mba <- mba %>%
  mutate(type=coalesce(type,flywire_type,manc_type,hemibrain_type))%>%
  mutate(
    type = case_when(
      grepl("putative_ppk23", receptor_type) ~ "m-cell",
      grepl("putative_ppk25", receptor_type) ~ "f-cell",
      TRUE ~ type
    )
  )%>%
  mutate(cachero.type = str_extract(synonyms, "(?<=Cachero 2010:)[^;]+") %>%
                            str_trim())
```






### 1.2 Function to load connectivity
```{r}
fetch_connectivity <- function(synapse_threshold = 5) {
  mba <- mcns_body_annotations()%>%
    mutate(type=coalesce(type,flywire_type,manc_type,hemibrain_type))%>%
    mutate(cachero.type = str_extract(synonyms, "(?<=Cachero 2010:)[^;]+") %>%
                            str_trim())
  connectivity <- cf_partners(cf_ids(malecns = mba %>% pull(bodyid)),
                              partners = 'o',
                              threshold = synapse_threshold)
  connectivity <- connectivity %>%
    left_join(mba %>%
                select("type", "bodyid",'fru_dsx','consensus_nt','flywire_type','synonyms','receptor_type','cachero.type','dimorphism') %>%
                mutate(bodyid=as.integer(bodyid))%>%
                rename(pre_type = type,pre_fru_dsx=fru_dsx,pre_nt=consensus_nt,pre_fw_type=flywire_type,pre_synonyms=synonyms,pre_receptor_type=receptor_type,pre.dimorphism=dimorphism,pre.cachero.type=cachero.type),
              by = c('pre_id'='bodyid'))%>%
    rename(post_type = type)%>%
    left_join(mba %>%
                select("bodyid",'fru_dsx','consensus_nt','flywire_type','synonyms','receptor_type','cachero.type','dimorphism') %>%
                mutate(bodyid=as.integer(bodyid))%>%
                rename(post_fru_dsx=fru_dsx,post_nt=consensus_nt,post_fw_type=flywire_type,post_synonyms=synonyms,post_receptor_type=receptor_type,post.dimorphism=dimorphism,post.cachero.type=cachero.type),
              by = c('post_id'='bodyid'))
  return(connectivity)
}
```

### 1.3 Load connectivity
```{r}
conn <-fetch_connectivity()
conn_save <- conn

conn <- conn %>%
  mutate(
    pre_type = case_when(
      grepl("putative_ppk23", pre_receptor_type) ~ "m-cell",
      grepl("putative_ppk25", pre_receptor_type) ~ "f-cell",
      TRUE ~ pre_type
    ),
    post_type = case_when(
      grepl("putative_ppk23", post_receptor_type) ~ "m-cell",
      grepl("putative_ppk25", post_receptor_type) ~ "f-cell",
      TRUE ~ post_type
    )
  )
```

## 2 Adjacency matrix
### 2.1 Function adjacency matrix
```{r}
calculate_normed_adj_matrix <-function(connectivity,cell.or.type='type',pre.or.post='pre'){
  colScale <- function(A, na.rm = TRUE) {
    scalefac <- 1 / Matrix::colSums(A)
    if (na.rm) scalefac[!is.finite(scalefac)] <- 0
    B <- A %*% Matrix::Diagonal(x = scalefac)
    B
    }
  rowScale <- function(A, na.rm = TRUE) {
    scalefac <- 1 / Matrix::rowSums(A)
    if (na.rm) scalefac[!is.finite(scalefac)] <- 0
    B <- Matrix::Diagonal(x = scalefac) %*% A
    B
    }
  if(cell.or.type=='cell'){
    unique.identifier <- union(as.character(connectivity$pre_id), as.character(connectivity$post_id))
    adj.matrix <- sparseMatrix(
      i = match(connectivity$pre_id, unique.identifier),
      j = match(connectivity$post_id, unique.identifier),
      x = connectivity$weight,
      dims = c(length(unique.identifier), length(unique.identifier)),
      dimnames = list(unique.identifier, unique.identifier))
  }else{
    unique.identifier <- union(connectivity$pre_type, connectivity$post_type)
    adj.matrix <- sparseMatrix(
      i = match(connectivity$pre_type, unique.identifier),
      j = match(connectivity$post_type, unique.identifier),
      x = connectivity$weight,
      dims = c(length(unique.identifier), length(unique.identifier)),
      dimnames = list(unique.identifier, unique.identifier))
  }
  if(pre.or.post=='pre'){
    adj.matrix.normed.pre <- rowScale(adj.matrix)
    colnames(adj.matrix.normed.pre) <- colnames(adj.matrix)
    rownames(adj.matrix.normed.pre) <- rownames(adj.matrix)
    return(adj.matrix.normed.pre)
  }else if(pre.or.post=='avg'){
    adj.matrix.normed.post <- colScale(adj.matrix)
    colnames(adj.matrix.normed.post) <- colnames(adj.matrix)
    rownames(adj.matrix.normed.post) <- rownames(adj.matrix)
    adj.matrix.normed.pre <- rowScale(adj.matrix)
    colnames(adj.matrix.normed.pre) <- colnames(adj.matrix)
    rownames(adj.matrix.normed.pre) <- rownames(adj.matrix)
    
    return(avg_mat <- (adj.matrix.normed.post + adj.matrix.normed.post) / 2)
    
  }
  
  else{
    adj.matrix.normed.post <- colScale(adj.matrix)
    colnames(adj.matrix.normed.post) <- colnames(adj.matrix)
    rownames(adj.matrix.normed.post) <- rownames(adj.matrix)
    return(adj.matrix.normed.post)
  }
}
```

### 2.1 Create adjacency matrix
```{r}
use.clone <- F
conn<-conn_save
conn<- conn%>%
  mutate(pre_type=coalesce(pre_type,pre_fw_type),post_type=coalesce(post_type,post_fw_type))%>%
  mutate(pre_type=if_else(is.na(pre_type),as.character(bodyid),pre_type),
         post_type=if_else(is.na(post_type),as.character(partner),post_type))%>%
  mutate(pre_type = gsub("[()]", "", pre_type))%>%
  mutate(post_type = gsub("[()]", "", post_type))




#nam <-calculate_normed_adj_matrix(conn.wo.gaba,cell.or.type='type',pre.or.post='avg') #avg
nam <-calculate_normed_adj_matrix(conn,cell.or.type='type',pre.or.post='post') #avg
nam_thresholded <-nam

g.prout.mcns <- graph_from_adjacency_matrix(
  nam_thresholded,
  mode = "directed",
  weighted = TRUE,
  diag = FALSE
)
```

#Examples vAB3 (11998)
```{r}

  inputs.11998 <- mcns_connection_table(11998,partners='inputs')
  inputs.11998.sum <- inputs.11998%>%group_by(type)%>%summarize(weight=sum(weight))
  inputs.11998.sum$post.input.normed <- inputs.11998.sum$weight/sum(inputs.11998$weight)
  inputs.11998.sum<- inputs.11998.sum %>%
    rename(pre=type)%>%
    mutate(IR52b = pre %in% IR52b.types,
          IR52a = pre %in% IR52a.types,
          ppk25 = pre %in% ppk25.types,
          ppk23 = pre %in% ppk23.types,
          post='vAB3 (11998)') %>% 
    
    left_join(mba.dimorphism,by= c('pre'='type'))
  
  outputs.11998 <- mcns_connection_table(11998,partners='outputs')
  outputs.11998.sum <- outputs.11998%>%group_by(type)%>%summarize(weight=sum(weight))
  outputs.11998.sum$post.input.normed <- outputs.11998.sum$weight/sum(inputs.11998$weight)
  outputs.11998.sum<- outputs.11998.sum %>%
    rename(post=type)%>%
    mutate(IR52b = FALSE,
          IR52a = FALSE,
          ppk25 = FALSE,
          ppk23 = FALSE,
          pre='vAB3 (11998)') %>% 
    
    left_join(mba.dimorphism,by= c('post'='type'))
  
  in.and.out.11998 <- rbind(inputs.11998.sum,outputs.11998.sum)
  
```

#Examples PPN1 (11431)
```{r}

  inputs.11431 <- mcns_connection_table(11431,partners='inputs')
  inputs.11431.sum <- inputs.11431%>%group_by(type)%>%summarize(weight=sum(weight))
  inputs.11431.sum$post.input.normed <- inputs.11431.sum$weight/sum(inputs.11998$weight)
  inputs.11431.sum<- inputs.11431.sum %>%
    rename(pre=type)%>%
    mutate(IR52b = pre %in% IR52b.types,
          IR52a = pre %in% IR52a.types,
          ppk25 = pre %in% ppk25.types,
          ppk23 = pre %in% ppk23.types,
          post='PPN1 (11431)') %>% 
    left_join(mba.dimorphism,by= c('pre'='type'))
  
  outputs.11431 <- mcns_connection_table(11431,partners='outputs')
  outputs.11431.sum <- outputs.11431%>%group_by(type)%>%summarize(weight=sum(weight))
  outputs.11431.sum$post.input.normed <- outputs.11431.sum$weight/sum(inputs.11998$weight)
  outputs.11431.sum<- outputs.11431.sum %>%
    rename(post=type)%>%
    mutate(IR52b = FALSE,
          IR52a = FALSE,
          ppk25 = FALSE,
          ppk23 = FALSE,
          pre='PPN1 (11431)') %>% 
    left_join(mba.dimorphism,by= c('post'='type'))
  
  in.and.out.11431 <- rbind(inputs.11431.sum,outputs.11431.sum)
  
```

target cells PPN1 and vAB3
```{r}
cutoff=0.1
target.PPN1 <- in.and.out %>%
    filter(post %in% setdiff(outputs.11431.sum%>%pull(post),outputs.11998.sum%>%pull(post)))%>%
    filter(!grepl('AN',post)) %>% 
    filter(!grepl('IN',post)) %>% 
    filter(weight>=100)%>%pull(post)

target.vAB3 <- in.and.out %>%
    filter(post %in% setdiff(outputs.11998.sum%>%pull(post),outputs.11431.sum%>%pull(post)))%>%
    filter(weight>=100)%>%
    filter(!grepl('AN',post)) %>% 
    filter(!grepl('IN',post)) %>% 
    pull(post)
```

define kstrongest path function
```{r}
add_valence_flag <- function(df, nt_by_type, is_inhib_by_nt) {
  df %>%
    rowwise() %>%
    mutate(
      # split path and drop endpoint
      nodes = list(setdiff(strsplit(path, " -> ", fixed = TRUE)[[1]], end)),
      # lookup NTs
      nts   = list(unname(nt_by_type[unlist(nodes)])),
      # lookup inhibitory flags
      inhib = list(unname(is_inhib_by_nt[unlist(nts)])),
      # count inhibitors
      n_inhib = sum(unlist(inhib), na.rm = TRUE),
      # convert to +1 / -1
      d = ifelse(n_inhib %% 2 == 0, 1, -1)
    ) %>%
    ungroup()
}



find_k_strongest_paths <- function(
  g,
  starts,
  targets,
  mba,
  n_paths = 3,
  diversity = c("otheredges","othernodes","none"),
  ignore_pattern = NULL  # grepl() pattern; matched node names are excluded (start/target kept),
  
){
  
  type2nt <- mba %>%select(type,consensus_nt)%>%group_by(type)%>%distinct()%>%rename(nt=consensus_nt)
  nt_by_type <- setNames(type2nt$nt, type2nt$type)
  inhibitory_nts <- c("gaba","glycine","histamine")
  all_nts <- unique(type2nt$nt)
  is_inhib_by_nt <- setNames(all_nts %in% inhibitory_nts, all_nts)
    
  diversity <- match.arg(diversity)

  # optional: drop nodes matching ignore_pattern (but never drop starts/targets)
  if (!is.null(ignore_pattern)) {
    drop <- V(g)$name[grepl(ignore_pattern, V(g)$name)]
    keep <- unique(c(starts, targets))
    drop <- setdiff(drop, keep)
    if (length(drop)) g <- igraph::delete_vertices(g, drop)
  }

  # weights → log-costs; guard zeros/NAs
  w <- E(g)$weight
  if (is.null(w)) stop("Edges must have numeric 'weight'.")
  w[!is.finite(w) | w <= 0] <- .Machine$double.eps
  log_w <- -log(w)

  results <- list()
  all_nodes <- character(0)

  for (s in starts) for (t in targets) {
    if (!(s %in% V(g)$name) || !(t %in% V(g)$name)) {
      results[[paste(s,t,sep="->")]] <- list(list(
        start = s, end = t, path = NA_character_, strength = NA_real_, hops = NA_integer_
      ))
      next
    }

    g_tmp <- g
    E(g_tmp)$log_weight <- log_w
    pair_paths <- list()

    for (i in seq_len(n_paths)) {
      sp <- igraph::shortest_paths(
        g_tmp, from = s, to = t,
        weights = E(g_tmp)$log_weight,
        output = "both"
      )
      if (length(sp$vpath[[1]]) == 0) break

      vpath <- sp$vpath[[1]]
      epath <- sp$epath[[1]]

      final_strength <- exp(-sum(E(g_tmp)[epath]$log_weight))
      hops <- length(epath)

      pair_paths[[paste0("path", i)]] <- list(
        start = s,
        end = t,
        path = paste(V(g)[vpath]$name, collapse = " -> "),
        strength = final_strength,
        hops = hops
      )

      all_nodes <- c(all_nodes, V(g)[vpath]$name)

      if (diversity == "othernodes") {
        inter <- setdiff(V(g)[vpath]$name, c(s, t))
        if (length(inter)) g_tmp <- igraph::delete_vertices(g_tmp, inter)
      } else if (diversity == "otheredges") {
        g_tmp <- igraph::delete_edges(g_tmp, epath)
      }
    }

    if (length(pair_paths) == 0) {
      pair_paths <- list(list(
        start = s, end = t, path = NA_character_, strength = NA_real_, hops = NA_integer_
      ))
    }

    results[[paste(s,t,sep="->")]] <- pair_paths
  }

  # flatten
  results_df <- do.call(rbind, lapply(results, function(pl) {
    do.call(rbind, lapply(pl, function(r)
      data.frame(start=r$start, end=r$end, path=r$path,
                 strength=r$strength, hops=r$hops,
                 stringsAsFactors=FALSE)))
  }))

  results_df_wo_na <- dplyr::filter(results_df, !is.na(strength))
  all_nodes <- unique(all_nodes)
  
  results_df_wo_na= add_valence_flag(results_df_wo_na, nt_by_type, is_inhib_by_nt)%>%
              mutate(valence = ifelse(d == 1L, "excitatory", "inhibitory"))
  
  list(df = results_df_wo_na, nodes = all_nodes, raw = results)
}

```




path finding new


```{r}
#olfactory
start.types.olf <- c('ORN_DA1','ORN_VA1v')
res.vAB3.olf <- find_k_strongest_paths(g.prout.mcns, starts=start.types.olf, targets=target.vAB3 ,n_paths=3,diversity='otheredges',mba=mba)
res.PPN1.olf <- find_k_strongest_paths(g.prout.mcns, starts=start.types.olf, targets=target.PPN1,n_paths=3,diversity='otheredges',mba=mba)

res.vAB3.olf$df$dataset <- "vAB3"
res.PPN1.olf$df$dataset <- "PPN1"
df_all.olf <- bind_rows(res.vAB3.olf$df, res.PPN1.olf$df)



t_res  <- t.test(strength ~ dataset, data = df_all.olf)
pval   <- unname(t_res$p.value)
ann <- data.frame(
  group1      = "PPN1",
  group2      = "vAB3",
  p           = pval,
  y.position  = max(df_all.olf$strength, na.rm = TRUE) * 1.12
)

ggplot(df_all.olf, aes(x = dataset, y = strength)) +
  geom_boxplot(outlier.shape = NA, fill = "lightgray") +
  geom_jitter(width = 0.2, height = 0, alpha = 0.4, color = "blue") +
  theme_bw() +
  labs(title = "Path strength Olfactory 11998_11431") +
  theme(plot.title = element_text(hjust = 0.5)) +
  stat_pvalue_manual(
    ann,
    label = "p",         # use the column 'p'
    tip.length = 0
  )+
  scale_y_log10() 


ggplot(df_all.olf, aes(x = dataset, y = hops)) +
  geom_jitter(width = 0.2, height = 0, alpha = 0.6) +
  scale_y_log10() +
  theme_bw()+
  labs(title = "Hops in strongest path Olfactory 11998_11431") +
  theme(plot.title = element_text(hjust = 0.5))



ann_strength <- df_all.olf %>%
  group_by(valence) %>%
  summarise(
    group1 = "PPN1",
    group2 = "vAB3",
    p = unname(t.test(strength ~ dataset)$p.value),
    y.position = max(strength, na.rm = TRUE) * 1.12,
    .groups = "drop"
  )

# strength boxplots, split by valence
ggplot(df_all.olf, aes(x = dataset, y = strength)) +
  geom_boxplot(outlier.shape = NA, fill = "lightgray") +
  geom_jitter(width = 0.2, height = 0, alpha = 0.4, color = "blue") +
  scale_y_log10() +
  theme_bw() +
  labs(title = "Path strength (olfactory) by valence 11998_11431") +
  theme(plot.title = element_text(hjust = 0.5)) +
  facet_wrap(~ valence, nrow = 1) +
  stat_pvalue_manual(ann_strength, label = "p", tip.length = 0)

```


```{r}
#visual
start.types.vis <- mba%>%filter(superclass=='ol_sensory')%>%pull(type)%>%unique()
res.vAB3.vis <- find_k_strongest_paths(g.prout.mcns, starts=start.types.vis, targets=target.vAB3 ,n_paths=3,diversity='otheredges',mba=mba)
res.PPN1.vis <- find_k_strongest_paths(g.prout.mcns, starts=start.types.vis, targets=target.PPN1,n_paths=3,diversity='otheredges',mba=mba)

res.vAB3.vis$df$dataset <- "vAB3"
res.PPN1.vis$df$dataset <- "PPN1"
df_all.vis <- bind_rows(res.vAB3.vis$df, res.PPN1.vis$df)



t_res  <- t.test(strength ~ dataset, data = df_all.vis)
pval   <- unname(t_res$p.value)
ann <- data.frame(
  group1      = "PPN1",
  group2      = "vAB3",
  p           = pval,
  y.position  = max(df_all.vis$strength, na.rm = TRUE) * 1.12
)

ggplot(df_all.vis, aes(x = dataset, y = strength)) +
  geom_boxplot(outlier.shape = NA, fill = "lightgray") +
  geom_jitter(width = 0.2, height = 0, alpha = 0.4, color = "blue") +
  theme_bw() +
  labs(title = "Path strength Visual 11998_11431") +
  theme(plot.title = element_text(hjust = 0.5)) +
  stat_pvalue_manual(
    ann,
    label = "p",         # use the column 'p'
    tip.length = 0
  )+
  scale_y_log10() 


ggplot(df_all.vis, aes(x = dataset, y = hops)) +
  geom_jitter(width = 0.2, height = 0, alpha = 0.6) +
  scale_y_log10() +
  theme_bw()+
  labs(title = "Hops in strongest path Visual 11998_11431") +
  theme(plot.title = element_text(hjust = 0.5))



ann_strength <- df_all.vis %>%
  group_by(valence) %>%
  summarise(
    group1 = "PPN1",
    group2 = "vAB3",
    p = unname(t.test(strength ~ dataset)$p.value),
    y.position = max(strength, na.rm = TRUE) * 1.12,
    .groups = "drop"
  )

# strength boxplots, split by valence
ggplot(df_all.vis, aes(x = dataset, y = strength)) +
  geom_boxplot(outlier.shape = NA, fill = "lightgray") +
  geom_jitter(width = 0.2, height = 0, alpha = 0.4, color = "blue") +
  scale_y_log10() +
  theme_bw() +
  labs(title = "Path strength (visual) by valence 11998_11431") +
  theme(plot.title = element_text(hjust = 0.5)) +
  facet_wrap(~ valence, nrow = 1) +
  stat_pvalue_manual(ann_strength, label = "p", tip.length = 0)
```


```{r}


#contact chemosensor ppk23

start.types.ppk23 <- mba.static%>%filter(grepl('ppk23',receptor_type))%>%pull(type)%>%unique()
res.vAB3.ppk23 <- find_k_strongest_paths(g.prout.mcns, starts=start.types.ppk23, targets=target.vAB3 ,n_paths=3,diversity='otheredges',ignore_pattern='AN09B017',mba=mba)
res.PPN1.ppk23 <- find_k_strongest_paths(g.prout.mcns, starts=start.types.ppk23, targets=target.PPN1,n_paths=3,diversity='otheredges',ignore_pattern='AN05B102',mba=mba)

res.vAB3.ppk23$df$dataset <- "vAB3"
res.PPN1.ppk23$df$dataset <- "PPN1"
df_all.ppk23 <- bind_rows(res.vAB3.ppk23$df, res.PPN1.ppk23$df)



t_res  <- t.test(strength ~ dataset, data = df_all.ppk23)
pval   <- unname(t_res$p.value)
ann <- data.frame(
  group1      = "PPN1",
  group2      = "vAB3",
  p           = pval,
  y.position  = max(df_all.ppk23$strength, na.rm = TRUE) * 1.12
)

ggplot(df_all.ppk23, aes(x = dataset, y = strength)) +
  geom_boxplot(outlier.shape = NA, fill = "lightgray") +
  geom_jitter(width = 0.2, height = 0, alpha = 0.4, color = "blue") +
  theme_bw() +
  labs(title = "Path strength PPK23 11998_11431") +
  theme(plot.title = element_text(hjust = 0.5)) +
  stat_pvalue_manual(
    ann,
    label = "p",         # use the column 'p'
    tip.length = 0
  )+
  scale_y_log10() 


ggplot(df_all.ppk23, aes(x = dataset, y = hops)) +
  geom_jitter(width = 0.2, height = 0, alpha = 0.6) +
  scale_y_log10() +
  theme_bw()+
  labs(title = "Hops in strongest path PPK23 11998_11431") +
  theme(plot.title = element_text(hjust = 0.5))



ann_strength <- df_all.ppk23 %>%
  group_by(valence) %>%
  summarise(
    group1 = "PPN1",
    group2 = "vAB3",
    p = unname(t.test(strength ~ dataset)$p.value),
    y.position = max(strength, na.rm = TRUE) * 1.12,
    .groups = "drop"
  )

# strength boxplots, split by valences
ggplot(df_all.ppk23, aes(x = dataset, y = strength)) +
  geom_boxplot(outlier.shape = NA, fill = "lightgray") +
  geom_jitter(width = 0.2, height = 0, alpha = 0.4, color = "blue") +
  scale_y_log10() +
  theme_bw() +
  labs(title = "Path strength (PPK23) by valence 11998_11431") +
  theme(plot.title = element_text(hjust = 0.5)) +
  facet_wrap(~ valence, nrow = 1) +
  stat_pvalue_manual(ann_strength, label = "p", tip.length = 0)
```


```{r}
#contact chemosensor ppk25
start.types.ppk25 <- mba.static%>%filter(grepl('ppk25',receptor_type))%>%pull(type)%>%unique()
res.vAB3.ppk25 <- find_k_strongest_paths(g.prout.mcns, starts=start.types.ppk25, targets=target.vAB3 ,n_paths=3,diversity='otheredges',ignore_pattern='AN09B017',mba=mba)
res.PPN1.ppk25 <- find_k_strongest_paths(g.prout.mcns, starts=start.types.ppk25, targets=target.PPN1,n_paths=3,diversity='otheredges',ignore_pattern='AN05B102',mba=mba)

res.vAB3.ppk25$df$dataset <- "vAB3"
res.PPN1.ppk25$df$dataset <- "PPN1"
df_all.ppk25 <- bind_rows(res.vAB3.ppk25$df, res.PPN1.ppk25$df)



t_res  <- t.test(strength ~ dataset, data = df_all.ppk25)
pval   <- unname(t_res$p.value)
ann <- data.frame(
  group1      = "PPN1",
  group2      = "vAB3",
  p           = pval,
  y.position  = max(df_all.ppk25$strength, na.rm = TRUE) * 1.12
)

ggplot(df_all.ppk25, aes(x = dataset, y = strength)) +
  geom_boxplot(outlier.shape = NA, fill = "lightgray") +
  geom_jitter(width = 0.2, height = 0, alpha = 0.4, color = "blue") +
  theme_bw() +
  labs(title = "Path strength ppk25") +
  theme(plot.title = element_text(hjust = 0.5)) +
  stat_pvalue_manual(
    ann,
    label = "p",         # use the column 'p'
    tip.length = 0
  )+
  scale_y_log10() 


ggplot(df_all.ppk25, aes(x = dataset, y = hops)) +
  geom_jitter(width = 0.2, height = 0, alpha = 0.6) +
  scale_y_log10() +
  theme_bw()+
  labs(title = "Hops in strongest path ppk25") +
  theme(plot.title = element_text(hjust = 0.5))



ann_strength <- df_all.ppk25 %>%
  group_by(valence) %>%
  summarise(
    group1 = "PPN1",
    group2 = "vAB3",
    p = unname(t.test(strength ~ dataset)$p.value),
    y.position = max(strength, na.rm = TRUE) * 1.12,
    .groups = "drop"
  )

# strength boxplots, split by valence
ggplot(df_all.ppk25, aes(x = dataset, y = strength)) +
  geom_boxplot(outlier.shape = NA, fill = "lightgray") +
  geom_jitter(width = 0.2, height = 0, alpha = 0.4, color = "blue") +
  scale_y_log10() +
  theme_bw() +
  labs(title = "Path strength (ppk25) by valence") +
  theme(plot.title = element_text(hjust = 0.5)) +
  facet_wrap(~ valence, nrow = 1) +
  stat_pvalue_manual(ann_strength, label = "p", tip.length = 0)
```

All Neurons downstream

```{r}

all.PPN1.ids <- mba%>%filter(grepl('PPN1',synonyms))%>%pull(bodyid)
all.vAB3.ids <- mba%>%filter(grepl('vAB3 Clowney',notes))%>%pull(bodyid)
target.vAB3.all <- cf_partner_summary(cf_ids(malecns=all.vAB3.ids),partners='out',normalise = F) %>% 
  group_by(type.post)%>%
  summarize(weight=sum(weight))%>%
  filter(!grepl('AN',type.post)) %>% 
  filter(!grepl('IN',type.post)) %>%
  arrange(desc(weight)) %>%
  head(10)%>%
  pull(type.post)

target.PPN1.all <- cf_partner_summary(cf_ids(malecns=all.PPN1.ids),partners='out',normalise = F) %>% 
  group_by(type.post)%>%
  summarize(weight=sum(weight))%>%
  filter(!grepl('AN',type.post)) %>% 
  filter(!grepl('IN',type.post)) %>%
  arrange(desc(weight)) %>%
  head(10)%>%
  pull(type.post)




start.types.olf <- c('ORN_DA1','ORN_VA1v')
start.types.olf <- mba.static%>%filter(grepl('cb_sensory',superclass))%>%filter(grepl('olfactory',class))%>%pull(type)%>%unique()
res.vAB3.olf <- find_k_strongest_paths(g.prout.mcns, starts=start.types.olf, targets=target.vAB3.all ,n_paths=3,diversity='otheredges',mba=mba)
res.PPN1.olf <- find_k_strongest_paths(g.prout.mcns, starts=start.types.olf, targets=target.PPN1.all,n_paths=3,diversity='otheredges',mba=mba)

res.vAB3.olf$df$dataset <- "vAB3"
res.PPN1.olf$df$dataset <- "PPN1"
df_all.olf <- bind_rows(res.vAB3.olf$df, res.PPN1.olf$df)



t_res  <- t.test(strength ~ dataset, data = df_all.olf)
pval   <- unname(t_res$p.value)
ann <- data.frame(
  group1      = "PPN1",
  group2      = "vAB3",
  p           = pval,
  y.position  = max(df_all.olf$strength, na.rm = TRUE) * 1.12
)

ggplot(df_all.olf, aes(x = dataset, y = strength)) +
  geom_boxplot(outlier.shape = NA, fill = "lightgray") +
  geom_jitter(width = 0.2, height = 0, alpha = 0.4, color = "blue") +
  theme_bw() +
  labs(title = "Path strength Olfactory") +
  theme(plot.title = element_text(hjust = 0.5)) +
  stat_pvalue_manual(
    ann,
    label = "p",         # use the column 'p'
    tip.length = 0
  )+
  scale_y_log10() 


ggplot(df_all.olf, aes(x = dataset, y = hops)) +
  geom_jitter(width = 0.2, height = 0, alpha = 0.6) +
  scale_y_log10() +
  theme_bw()+
  labs(title = "Hops in strongest path Olfactory") +
  theme(plot.title = element_text(hjust = 0.5))



ann_strength <- df_all.olf %>%
  group_by(valence) %>%
  summarise(
    group1 = "PPN1",
    group2 = "vAB3",
    p = unname(t.test(strength ~ dataset)$p.value),
    y.position = max(strength, na.rm = TRUE) * 1.12,
    .groups = "drop"
  )

# strength boxplots, split by valence
ggplot(df_all.olf, aes(x = dataset, y = strength)) +
  geom_boxplot(outlier.shape = NA, fill = "lightgray") +
  geom_jitter(width = 0.2, height = 0, alpha = 0.4, color = "blue") +
  scale_y_log10() +
  theme_bw() +
  labs(title = "Path strength (olfactory) by valence") +
  theme(plot.title = element_text(hjust = 0.5)) +
  facet_wrap(~ valence, nrow = 1) +
  stat_pvalue_manual(ann_strength, label = "p", tip.length = 0)


```


```{r}
#visual
start.types.vis <- mba%>%filter(superclass=='ol_sensory')%>%pull(type)%>%unique()
res.vAB3.vis <- find_k_strongest_paths(g.prout.mcns, starts=start.types.vis, targets=target.vAB3.all ,n_paths=3,diversity='otheredges',mba=mba)
res.PPN1.vis <- find_k_strongest_paths(g.prout.mcns, starts=start.types.vis, targets=target.PPN1.all,n_paths=3,diversity='otheredges',mba=mba)

res.vAB3.vis$df$dataset <- "vAB3"
res.PPN1.vis$df$dataset <- "PPN1"
df_all.vis <- bind_rows(res.vAB3.vis$df, res.PPN1.vis$df)



t_res  <- t.test(strength ~ dataset, data = df_all.vis)
pval   <- unname(t_res$p.value)
ann <- data.frame(
  group1      = "PPN1",
  group2      = "vAB3",
  p           = pval,
  y.position  = max(df_all.vis$strength, na.rm = TRUE) * 1.12
)

ggplot(df_all.vis, aes(x = dataset, y = strength)) +
  geom_boxplot(outlier.shape = NA, fill = "lightgray") +
  geom_jitter(width = 0.2, height = 0, alpha = 0.4, color = "blue") +
  theme_bw() +
  labs(title = "Path strength Visual") +
  theme(plot.title = element_text(hjust = 0.5)) +
  stat_pvalue_manual(
    ann,
    label = "p",         # use the column 'p'
    tip.length = 0
  )+
  scale_y_log10() 


ggplot(df_all.vis, aes(x = dataset, y = hops)) +
  geom_jitter(width = 0.2, height = 0, alpha = 0.6) +
  scale_y_log10() +
  theme_bw()+
  labs(title = "Hops in strongest path Visual") +
  theme(plot.title = element_text(hjust = 0.5))



ann_strength <- df_all.vis %>%
  group_by(valence) %>%
  summarise(
    group1 = "PPN1",
    group2 = "vAB3",
    p = unname(t.test(strength ~ dataset)$p.value),
    y.position = max(strength, na.rm = TRUE) * 1.12,
    .groups = "drop"
  )

# strength boxplots, split by valence
ggplot(df_all.vis, aes(x = dataset, y = strength)) +
  geom_boxplot(outlier.shape = NA, fill = "lightgray") +
  geom_jitter(width = 0.2, height = 0, alpha = 0.4, color = "blue") +
  scale_y_log10() +
  theme_bw() +
  labs(title = "Path strength (visual) by valence") +
  theme(plot.title = element_text(hjust = 0.5)) +
  facet_wrap(~ valence, nrow = 1) +
  stat_pvalue_manual(ann_strength, label = "p", tip.length = 0)

```

```{r}


#contact chemosensor ppk23

start.types.ppk23 <- mba.static%>%filter(grepl('ppk23',receptor_type))%>%pull(type)%>%unique()
res.vAB3.ppk23 <- find_k_strongest_paths(g.prout.mcns, starts=start.types.ppk23, targets=target.vAB3.all ,n_paths=3,diversity='otheredges',ignore_pattern='AN09B017',mba=mba)
res.PPN1.ppk23 <- find_k_strongest_paths(g.prout.mcns, starts=start.types.ppk23, targets=target.PPN1.all,n_paths=3,diversity='otheredges',ignore_pattern='AN05B102',mba=mba)

res.vAB3.ppk23$df$dataset <- "vAB3"
res.PPN1.ppk23$df$dataset <- "PPN1"
df_all.ppk23 <- bind_rows(res.vAB3.ppk23$df, res.PPN1.ppk23$df)



t_res  <- t.test(strength ~ dataset, data = df_all.ppk23)
pval   <- unname(t_res$p.value)
ann <- data.frame(
  group1      = "PPN1",
  group2      = "vAB3",
  p           = pval,
  y.position  = max(df_all.ppk23$strength, na.rm = TRUE) * 1.12
)

ggplot(df_all.ppk23, aes(x = dataset, y = strength)) +
  geom_boxplot(outlier.shape = NA, fill = "lightgray") +
  geom_jitter(width = 0.2, height = 0, alpha = 0.4, color = "blue") +
  theme_bw() +
  labs(title = "Path strength PPK23") +
  theme(plot.title = element_text(hjust = 0.5)) +
  stat_pvalue_manual(
    ann,
    label = "p",         # use the column 'p'
    tip.length = 0
  )+
  scale_y_log10() 


ggplot(df_all.ppk23, aes(x = dataset, y = hops)) +
  geom_jitter(width = 0.2, height = 0, alpha = 0.6) +
  scale_y_log10() +
  theme_bw()+
  labs(title = "Hops in strongest path PPK23") +
  theme(plot.title = element_text(hjust = 0.5))



ann_strength <- df_all.ppk23 %>%
  group_by(valence) %>%
  summarise(
    group1 = "PPN1",
    group2 = "vAB3",
    p = unname(t.test(strength ~ dataset)$p.value),
    y.position = max(strength, na.rm = TRUE) * 1.12,
    .groups = "drop"
  )

# strength boxplots, split by valence
ggplot(df_all.ppk23, aes(x = dataset, y = strength)) +
  geom_boxplot(outlier.shape = NA, fill = "lightgray") +
  geom_jitter(width = 0.2, height = 0, alpha = 0.4, color = "blue") +
  scale_y_log10() +
  theme_bw() +
  labs(title = "Path strength (PPK23) by valence") +
  theme(plot.title = element_text(hjust = 0.5)) +
  facet_wrap(~ valence, nrow = 1) +
  stat_pvalue_manual(ann_strength, label = "p", tip.length = 0)
```


```{r}
#contact chemosensor ppk25
start.types.ppk25 <- mba.static%>%filter(grepl('ppk25',receptor_type))%>%pull(type)%>%unique()
res.vAB3.ppk25 <- find_k_strongest_paths(g.prout.mcns, starts=start.types.ppk25, targets=target.vAB3.all ,n_paths=3,diversity='otheredges',ignore_pattern='AN09B017',mba=mba)
res.PPN1.ppk25 <- find_k_strongest_paths(g.prout.mcns, starts=start.types.ppk25, targets=target.PPN1.all,n_paths=3,diversity='otheredges',ignore_pattern='AN05B102',mba=mba)

res.vAB3.ppk25$df$dataset <- "vAB3"
res.PPN1.ppk25$df$dataset <- "PPN1"
df_all.ppk25 <- bind_rows(res.vAB3.ppk25$df, res.PPN1.ppk25$df)



t_res  <- t.test(strength ~ dataset, data = df_all.ppk25)
pval   <- unname(t_res$p.value)
ann <- data.frame(
  group1      = "PPN1",
  group2      = "vAB3",
  p           = pval,
  y.position  = max(df_all.ppk25$strength, na.rm = TRUE) * 1.12
)

ggplot(df_all.ppk25, aes(x = dataset, y = strength)) +
  geom_boxplot(outlier.shape = NA, fill = "lightgray") +
  geom_jitter(width = 0.2, height = 0, alpha = 0.4, color = "blue") +
  theme_bw() +
  labs(title = "Path strength ppk25") +
  theme(plot.title = element_text(hjust = 0.5)) +
  stat_pvalue_manual(
    ann,
    label = "p",         # use the column 'p'
    tip.length = 0
  )+
  scale_y_log10() 


ggplot(df_all.ppk25, aes(x = dataset, y = hops)) +
  geom_jitter(width = 0.2, height = 0, alpha = 0.6) +
  scale_y_log10() +
  theme_bw()+
  labs(title = "Hops in strongest path ppk25") +
  theme(plot.title = element_text(hjust = 0.5))



ann_strength <- df_all.ppk25 %>%
  group_by(valence) %>%
  summarise(
    group1 = "PPN1",
    group2 = "vAB3",
    p = unname(t.test(strength ~ dataset)$p.value),
    y.position = max(strength, na.rm = TRUE) * 1.12,
    .groups = "drop"
  )

# strength boxplots, split by valence
ggplot(df_all.ppk25, aes(x = dataset, y = strength)) +
  geom_boxplot(outlier.shape = NA, fill = "lightgray") +
  geom_jitter(width = 0.2, height = 0, alpha = 0.4, color = "blue") +
  scale_y_log10() +
  theme_bw() +
  labs(title = "Path strength (ppk25) by valence") +
  theme(plot.title = element_text(hjust = 0.5)) +
  facet_wrap(~ valence, nrow = 1) +
  stat_pvalue_manual(ann_strength, label = "p", tip.length = 0)
```
