"0","# Requires: igraph, dplyr"
"0","find_k_strongest_paths <- function("
"0","  g,"
"0","  starts,"
"0","  targets,"
"0","  n_paths = 3,"
"0","  diversity = c(""otheredges"",""othernodes"",""none"")"
"0","){"
"0","  diversity <- match.arg(diversity)"
"0",""
"0","  # weights â†’ log-costs; guard zeros/NAs"
"0","  w <- E(g)$weight"
"0","  if (is.null(w)) stop(""Edges must have numeric 'weight'."")"
"0","  w[!is.finite(w) | w <= 0] <- .Machine$double.eps"
"0","  log_w <- -log(w)"
"0",""
"0","  results <- list()"
"0","  all_nodes <- character(0)"
"0",""
"0","  for (s in starts) for (t in targets) {"
"0","    if (!(s %in% V(g)$name) || !(t %in% V(g)$name)) {"
"0","      results[[paste(s,t,sep=""->"")]] <- list(list("
"0","        start = s, end = t, path = NA_character_, strength = NA_real_, hops = NA_integer_"
"0","      ))"
"0","      next"
"0","    }"
"0",""
"0","    g_tmp <- g"
"0","    E(g_tmp)$log_weight <- log_w"
"0","    pair_paths <- list()"
"0",""
"0","    for (i in seq_len(n_paths)) {"
"0","      sp <- igraph::shortest_paths("
"0","        g_tmp, from = s, to = t,"
"0","        weights = E(g_tmp)$log_weight,"
"0","        output = ""both"""
"0","      )"
"0","      if (length(sp$vpath[[1]]) == 0) break"
"0",""
"0","      vpath <- sp$vpath[[1]]"
"0","      epath <- sp$epath[[1]]"
"0",""
"0","      final_strength <- exp(-sum(E(g_tmp)[epath]$log_weight))"
"0","      hops <- length(epath)"
"0",""
"0","      pair_paths[[paste0(""path"", i)]] <- list("
"0","        start = s,"
"0","        end = t,"
"0","        path = paste(V(g)[vpath]$name, collapse = "" -> ""),"
"0","        strength = final_strength,"
"0","        hops = hops"
"0","      )"
"0",""
"0","      all_nodes <- c(all_nodes, V(g)[vpath]$name)"
"0",""
"0","      if (diversity == ""othernodes"") {"
"0","        inter <- setdiff(V(g)[vpath]$name, c(s, t))"
"0","        if (length(inter)) g_tmp <- igraph::delete_vertices(g_tmp, inter)"
"0","      } else if (diversity == ""otheredges"") {"
"0","        g_tmp <- igraph::delete_edges(g_tmp, epath)"
"0","      }"
"0","    }"
"0",""
"0","    results[[paste(s,t,sep=""->"")]] <- pair_paths"
"0","  }"
"0",""
"0","  # flatten"
"0","  results_df <- do.call(rbind, lapply(results, function(pl) {"
"0","    do.call(rbind, lapply(pl, function(r)"
"0","      data.frame(start=r$start, end=r$end, path=r$path,"
"0","                 strength=r$strength, hops=r$hops,"
"0","                 stringsAsFactors=FALSE)))"
"0","  }))"
"0",""
"0","  results_df_wo_na <- dplyr::filter(results_df, !is.na(strength))"
"0","  all_nodes <- unique(all_nodes)"
"0",""
"0","  list(df = results_df_wo_na, nodes = all_nodes, raw = results)"
"0","}"
"0",""
